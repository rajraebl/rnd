//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SecureClient.ServiceNmsp {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceNmsp.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAccountInfo", ReplyAction="http://tempuri.org/IService1/GetAccountInfoResponse")]
        SecureClient.ServiceNmsp.AccountInfo GetAccountInfo(SecureClient.ServiceNmsp.AccountCredential request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAccountInfo", ReplyAction="http://tempuri.org/IService1/GetAccountInfoResponse")]
        System.Threading.Tasks.Task<SecureClient.ServiceNmsp.AccountInfo> GetAccountInfoAsync(SecureClient.ServiceNmsp.AccountCredential request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AccountCredential", WrapperNamespace="http://tempuri.org/", IsWrapped=true, ProtectionLevel=System.Net.Security.ProtectionLevel.Sign)]
    public partial class AccountCredential {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/", ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign)]
        public string SecretKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", ProtectionLevel=System.Net.Security.ProtectionLevel.Sign, Order=0)]
        public string CustId;
        
        public AccountCredential() {
        }
        
        public AccountCredential(string SecretKey, string CustId) {
            this.SecretKey = SecretKey;
            this.CustId = CustId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AccountInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AccountInfo {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Order=0)]
        public int Balance;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Order=1)]
        public string Bank;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Order=2)]
        public string Name;
        
        public AccountInfo() {
        }
        
        public AccountInfo(int Balance, string Bank, string Name) {
            this.Balance = Balance;
            this.Bank = Bank;
            this.Name = Name;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : SecureClient.ServiceNmsp.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<SecureClient.ServiceNmsp.IService1>, SecureClient.ServiceNmsp.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SecureClient.ServiceNmsp.AccountInfo SecureClient.ServiceNmsp.IService1.GetAccountInfo(SecureClient.ServiceNmsp.AccountCredential request) {
            return base.Channel.GetAccountInfo(request);
        }
        
        public int GetAccountInfo(string SecretKey, string CustId, out string Bank, out string Name) {
            SecureClient.ServiceNmsp.AccountCredential inValue = new SecureClient.ServiceNmsp.AccountCredential();
            inValue.SecretKey = SecretKey;
            inValue.CustId = CustId;
            SecureClient.ServiceNmsp.AccountInfo retVal = ((SecureClient.ServiceNmsp.IService1)(this)).GetAccountInfo(inValue);
            Bank = retVal.Bank;
            Name = retVal.Name;
            return retVal.Balance;
        }
        
        public System.Threading.Tasks.Task<SecureClient.ServiceNmsp.AccountInfo> GetAccountInfoAsync(SecureClient.ServiceNmsp.AccountCredential request) {
            return base.Channel.GetAccountInfoAsync(request);
        }
    }
}
